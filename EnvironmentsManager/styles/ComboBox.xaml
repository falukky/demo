<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EnvironmentsManager.styles">

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxDarkToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border 
                    Grid.ColumnSpan="2"
                    Name="Border"
			        BorderBrush="Transparent" 
			        CornerRadius="0"
                    BorderThickness="1, 1, 1, 1" 
			        Background="#252525" />
            <Border 
                    Grid.Column="1"
                    Margin="1, 1, 1, 1"
                    BorderBrush="#444"
                    Name="ButtonBorder"
			        CornerRadius="0, 0, 0, 0"
                    BorderThickness="0, 0, 0, 0" 
			        Background="#252525" />
            <Path
                    Name="Arrow"
                    Grid.Column="1" 
			        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
			        HorizontalAlignment="Center"
                    Fill="#444"
			        VerticalAlignment="Center" 
                    Margin="-10,0,0,0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                <Setter Property="Panel.Background" TargetName="Border" Value="#353535"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="Gray"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="False">
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="DimGray"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="Transparent"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="DimGray"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="DimGray"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="DimGray"/>
                <Setter Property="TextElement.Foreground" Value="Silver"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxDarkFlatStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Gainsboro"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{DynamicResource applicationFontFamily}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
								      Grid.Column="2"
								      ClickMode="Press"
								      Focusable="False"
								      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
								      Template="{StaticResource ComboBoxDarkToggleButtonTemplate}"/>
                        <ContentPresenter Name="ContentSite"
								          Margin="{TemplateBinding Padding}"
								          IsHitTestVisible="False"
								          HorizontalAlignment="Left"
								          VerticalAlignment="Center"                              
								          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
								          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
								          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox"
								 Margin="3, 3, 23, 3"                     
								 IsReadOnly="{TemplateBinding IsReadOnly}"
								 Visibility="Hidden"
								 Background="Transparent"
								 HorizontalAlignment="Center"
                                 HorizontalContentAlignment="Center"
								 VerticalAlignment="Center"
								 Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False"/>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup"
							   Placement="Bottom"
							   Focusable="False"
							   AllowsTransparency="True"
							   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
							   PopupAnimation="Fade">
                            <Grid Name="DropDown"
								  SnapsToDevicePixels="True"
								  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
								  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder"
										Background="Silver"
										Margin="0, 0, 0, 0"
										CornerRadius="0"                                        
										BorderBrush="#FF103766"
										BorderThickness="1" />
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" Value="Gainsboro"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="False">
                            <Setter Property="TextElement.Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="Silver"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>